package ${mainPath}.admin.modular.${moduleName}.controller;
import ${mainPath}.${package}.${moduleName}.entity.${className};
import ${mainPath}.${package}.${moduleName}.service.I${className}Service;
import com.hsshy.beam.web.modular.base.controller.BaseController;
import com.hsshy.beam.common.utils.R;
import com.hsshy.beam.common.utils.ToolUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import java.util.Arrays;
import java.util.List;
/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(value="${className}Controller",tags={"${className}接口"})
@RequestMapping("/${moduleName}/${pathName}")
@RestController
public class ${className}Controller extends BaseController {

    @Autowired
    private I${className}Service ${classname}Service;


    //分页
    @ApiOperation("分页列表")
    @GetMapping(value = "/page/list")
    public R pageList(${className} ${classname}){
        QueryWrapper<${className}> qw = new QueryWrapper();
        IPage page = ${classname}Service.page(new Page(${classname}.getCurrentPage(),${classname}.getPageSize()),qw);
        return R.ok(page);
    }
    @ApiOperation("列表")
    @GetMapping(value = "/list")
    public R list(${className} ${classname}){
        QueryWrapper<${className}> qw = new QueryWrapper();
        List<${className}> ${classname}List = ${classname}Service.list(qw);
        return R.ok(${classname}List);
    }
    @ApiOperation("保存")
    @PostMapping(value = "/save")
    public R save(@RequestBody ${className} ${classname}){

        ${classname}Service.saveOrUpdate(${classname});
        return R.ok("保存成功");
    }
    @ApiOperation("删除")
    @PostMapping(value = "/delete")
    public R delete(@RequestBody Long ${classname}Ids[]){

        if(ToolUtil.isEmpty(${classname}Ids)||${classname}Ids.length<=0){
            return R.fail("未提交要删除的记录");
        }
        ${classname}Service.removeByIds(Arrays.asList(${classname}Ids));
        return R.ok("删除成功");
    }
#foreach($column in $columns)
#if("frozen" == $column.columnName)
    @ApiOperation("改变状态,是否可用")
    @PostMapping(value = "/change/status/{flag}")
    public R changeStatus(@RequestBody Long id,@PathVariable Integer flag){
        ${classname}Service.changeFrozen(id,flag);
        return R.ok("修改成功");
    }
#break
#end
#end







}